// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlataformaEducacao.GestaoAlunos.Data;

#nullable disable

namespace PlataformaEducacao.GestaoAlunos.Data.Migrations
{
    [DbContext(typeof(GestaoAlunosContext))]
    partial class GestaoAlunosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.16");

            modelBuilder.Entity("PlataformaEducacao.GestaoAlunos.Domain.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Alunos", (string)null);
                });

            modelBuilder.Entity("PlataformaEducacao.GestaoAlunos.Domain.AulaFinalizada", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AulaId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<Guid>("MatriculaId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MatriculaId");

                    b.ToTable("AulasFinalizadas", (string)null);
                });

            modelBuilder.Entity("PlataformaEducacao.GestaoAlunos.Domain.Certificado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<Guid>("MatriculaId")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeCurso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("NumeroCertificado")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MatriculaId")
                        .IsUnique();

                    b.ToTable("Certificados", (string)null);
                });

            modelBuilder.Entity("PlataformaEducacao.GestaoAlunos.Domain.Matricula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeCurso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("StatusMatricula")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("Matriculas", (string)null);
                });

            modelBuilder.Entity("PlataformaEducacao.GestaoAlunos.Domain.AulaFinalizada", b =>
                {
                    b.HasOne("PlataformaEducacao.GestaoAlunos.Domain.Matricula", "Matricula")
                        .WithMany("AulasFinalizadas")
                        .HasForeignKey("MatriculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Matricula");
                });

            modelBuilder.Entity("PlataformaEducacao.GestaoAlunos.Domain.Certificado", b =>
                {
                    b.HasOne("PlataformaEducacao.GestaoAlunos.Domain.Matricula", "Matricula")
                        .WithOne("Certificado")
                        .HasForeignKey("PlataformaEducacao.GestaoAlunos.Domain.Certificado", "MatriculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Matricula");
                });

            modelBuilder.Entity("PlataformaEducacao.GestaoAlunos.Domain.Matricula", b =>
                {
                    b.HasOne("PlataformaEducacao.GestaoAlunos.Domain.Aluno", "Aluno")
                        .WithMany("Matriculas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("PlataformaEducacao.GestaoAlunos.Domain.HistoricoAprendizado", "HistoricoAprendizado", b1 =>
                        {
                            b1.Property<Guid>("MatriculaId")
                                .HasColumnType("TEXT");

                            b1.Property<decimal?>("Progresso")
                                .HasColumnType("decimal(5,2)");

                            b1.HasKey("MatriculaId");

                            b1.ToTable("Matriculas");

                            b1.WithOwner()
                                .HasForeignKey("MatriculaId");
                        });

                    b.Navigation("Aluno");

                    b.Navigation("HistoricoAprendizado")
                        .IsRequired();
                });

            modelBuilder.Entity("PlataformaEducacao.GestaoAlunos.Domain.Aluno", b =>
                {
                    b.Navigation("Matriculas");
                });

            modelBuilder.Entity("PlataformaEducacao.GestaoAlunos.Domain.Matricula", b =>
                {
                    b.Navigation("AulasFinalizadas");

                    b.Navigation("Certificado")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
