// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlataformaEducacao.Gestao.Data;

#nullable disable

namespace PlataformaEducacao.Gestao.Data.Migrations
{
    [DbContext(typeof(GestaoContext))]
    [Migration("20250709072636_Finalizacao")]
    partial class Finalizacao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.17");

            modelBuilder.Entity("PlataformaEducacao.Gestao.Domain.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Alunos", (string)null);
                });

            modelBuilder.Entity("PlataformaEducacao.Gestao.Domain.AulaFinalizada", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AulaId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MatriculaId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MatriculaId");

                    b.ToTable("AulasFinalizadas", (string)null);
                });

            modelBuilder.Entity("PlataformaEducacao.Gestao.Domain.Certificado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeCurso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("NumeroCertificado")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("Certificados", (string)null);
                });

            modelBuilder.Entity("PlataformaEducacao.Gestao.Domain.Matricula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("Matriculas", (string)null);
                });

            modelBuilder.Entity("PlataformaEducacao.Gestao.Domain.AulaFinalizada", b =>
                {
                    b.HasOne("PlataformaEducacao.Gestao.Domain.Matricula", "Matricula")
                        .WithMany()
                        .HasForeignKey("MatriculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Matricula");
                });

            modelBuilder.Entity("PlataformaEducacao.Gestao.Domain.Certificado", b =>
                {
                    b.HasOne("PlataformaEducacao.Gestao.Domain.Aluno", "Aluno")
                        .WithMany("Certificados")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("PlataformaEducacao.Gestao.Domain.Matricula", b =>
                {
                    b.HasOne("PlataformaEducacao.Gestao.Domain.Aluno", "Aluno")
                        .WithMany("Matriculas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("PlataformaEducacao.Gestao.Domain.CursoMatriculado", "Curso", b1 =>
                        {
                            b1.Property<Guid>("MatriculaId")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("CursoId")
                                .HasColumnType("varchar(50)")
                                .HasColumnName("CursoId");

                            b1.Property<string>("CursoNome")
                                .IsRequired()
                                .HasColumnType("varchar(150)")
                                .HasColumnName("CursoNome");

                            b1.Property<int>("CursoTotalAulas")
                                .HasColumnType("INTEGER")
                                .HasColumnName("CursoTotalAulas");

                            b1.Property<decimal>("CursoValor")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("CursoValor");

                            b1.HasKey("MatriculaId");

                            b1.ToTable("Matriculas");

                            b1.WithOwner()
                                .HasForeignKey("MatriculaId");

                            b1.OwnsOne("PlataformaEducacao.Gestao.Domain.HistoricoAprendizado", "HistoricoAprendizado", b2 =>
                                {
                                    b2.Property<Guid>("CursoMatriculadoMatriculaId")
                                        .HasColumnType("TEXT");

                                    b2.Property<decimal?>("Progresso")
                                        .HasColumnType("decimal(5,2)")
                                        .HasColumnName("CursoProgresso");

                                    b2.HasKey("CursoMatriculadoMatriculaId");

                                    b2.ToTable("Matriculas");

                                    b2.WithOwner()
                                        .HasForeignKey("CursoMatriculadoMatriculaId");
                                });

                            b1.Navigation("HistoricoAprendizado");
                        });

                    b.Navigation("Aluno");

                    b.Navigation("Curso")
                        .IsRequired();
                });

            modelBuilder.Entity("PlataformaEducacao.Gestao.Domain.Aluno", b =>
                {
                    b.Navigation("Certificados");

                    b.Navigation("Matriculas");
                });
#pragma warning restore 612, 618
        }
    }
}
